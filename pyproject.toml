[tool.poetry]
name = "meepo"
version = "0.1.0"
description = ""
authors = ["shupfock <shupfock@foxmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
black = "22.10.0"
pre-commit = "2.20.0"
pytest = "7.2.0"
pytest-mock = "3.10.0"
pytest-asyncio = "0.20.1"
pytest-cov = "4.0.0"
fastapi = "0.111.0"
mypy = "1.0"
beanie = "1.26.0"
uvicorn = "0.29.0"
celery = "5.2.7"
redis = "4.3.4"
dependency-injector = "4.40.0"
aiokafka = "0.8.0"
pydantic-factories = "1.17.3"
loguru = "0.6.0"
flake8 = "6.0.0"
isort = "^5.13.2"
types-redis = "^4.6.0.20240417"
sqlalchemy = "2.0.29"
aiomysql = "0.2.0"
tortoise-orm = {extras = ["asyncmy"], version = "^0.20.1"}
ruff = "^0.4.4"

[[tool.poetry.source]]
name = "ustc"
url = "https://pypi.mirrors.ustc.edu.cn/simple/"
default = true
secondary = false

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
disallow_incomplete_defs = true
plugins = [
    "pydantic.mypy"
]
exclude = [
    'proto',
]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true
implicit_reexport = true


[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "*/tests/*"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 140

# Enable Pyflakes `E` and `F` codes by default.
lint.select = ["E", "F", "I","Q", "W", "PL"]
lint.ignore = [
    "E999",
]
# Unlike Flake8, default to a complexity level of 10.
lint.mccabe.max-complexity = 10
lint.per-file-ignores = { }

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "proto",
]

format.line-ending = "cr-lf"
format.docstring-code-format = true

# Assume Python 3.11
target-version = "py311"
